From f9098258ce41f3f9b8e04859ccbf0e68f596a775 Mon Sep 17 00:00:00 2001
From: redraz <redrazlive@gmail.com>
Date: Thu, 12 Jun 2025 09:58:33 +0300
Subject: [PATCH] Daybreak exFAT drivers

---
 troposphere/daybreak/source/ui.cpp | 16 ++++++----------
 1 file changed, 6 insertions(+), 10 deletions(-)

diff --git a/troposphere/daybreak/source/ui.cpp b/troposphere/daybreak/source/ui.cpp
index 693063ea6..83d828af0 100644
--- a/troposphere/daybreak/source/ui.cpp
+++ b/troposphere/daybreak/source/ui.cpp
@@ -66,8 +66,8 @@ namespace dbk {
         /* Update install state. */
         char g_update_path[FS_MAX_PATH];
         bool g_reset_to_factory = false;
-        bool g_exfat_supported = false;
-        bool g_use_exfat = false;
+        bool g_exfat_supported = true;
+        bool g_use_exfat = true;
 
         constexpr u32 MaxTapMovement = 20;
 
@@ -413,7 +413,7 @@ namespace dbk {
         const float button_y = y + TitleGap + SubTextHeight + VerticalGap * 2.0f + (R_FAILED(m_rc) ? SubTextHeight : 0.0f);
         const float button_width = (WindowWidth - HorizontalInset * 2.0f) / 2.0f - ButtonHorizontalGap;
         this->AddButton(BackButtonId, "Back", x + HorizontalInset, button_y, button_width, ButtonHeight);
-        this->AddButton(ContinueButtonId, "Continue", x + HorizontalInset + button_width + ButtonHorizontalGap, button_y, button_width, ButtonHeight);
+        this->AddButton(ContinueButtonId, "Install", x + HorizontalInset + button_width + ButtonHorizontalGap, button_y, button_width, ButtonHeight);
         this->SetButtonSelected(ContinueButtonId, true);
     }
 
@@ -889,7 +889,7 @@ namespace dbk {
                     /* Check if exfat is supported. */
                     g_exfat_supported = m_update_info.exfat_supported && R_SUCCEEDED(m_validation_info.exfat_result);
                     if (!g_exfat_supported) {
-                        g_use_exfat = false;
+                        g_use_exfat = true;
                     }
 
                     /* Create the next menu. */
@@ -960,11 +960,7 @@ namespace dbk {
 
             std::shared_ptr<Menu> next_menu;
 
-            if (g_exfat_supported) {
-                next_menu = std::make_shared<ChooseExfatMenu>(g_current_menu);
-            } else {
-                next_menu = std::make_shared<WarningMenu>(g_current_menu, std::make_shared<InstallUpdateMenu>(g_current_menu), "Ready to begin update installation", "Are you sure you want to proceed?");
-            }
+            next_menu = std::make_shared<WarningMenu>(g_current_menu, std::make_shared<InstallUpdateMenu>(g_current_menu), "Ready to begin update installation", "Are you sure you want to proceed?");
 
             if (g_reset_to_factory) {
                 ChangeMenu(std::make_shared<WarningMenu>(g_current_menu, next_menu, "Warning: Factory reset selected", "Saves and installed games will be permanently deleted."));
@@ -1022,7 +1018,7 @@ namespace dbk {
         if (const Button *activated_button = this->GetActivatedButton(); activated_button != nullptr) {
             switch (activated_button->id) {
                 case Fat32ButtonId:
-                    g_use_exfat = false;
+                    g_use_exfat = true;
                     break;
                 case ExFatButtonId:
                     g_use_exfat = true;
-- 
2.47.1.windows.1

